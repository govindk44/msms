{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSMS\\\\frontend\\\\src\\\\pages\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { apiUrl } from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangePassword() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    current_password: \"\",\n    new_password: \"\",\n    confirm_password: \"\",\n    user_id: \"\"\n  });\n  const onChangeHandler = e => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value\n    });\n    console.log(formValues); // Be aware this will log the previous state due to the asynchronous nature of setState\n  };\n  const callAPI = async e => {\n    e.preventDefault(); // Prevent default form submission\n    const user_id = sessionStorage.getItem(\"user_id\");\n    const payload = {\n      ...formValues,\n      user_id\n    };\n    try {\n      const response = await axios.post(`${apiUrl}/user/changepassword`, payload);\n      if (response.status === 200) {\n        alert(response.data.message || \"Password changed successfully\"); // Ensure the response has a message\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"An error occurred. Please try again.\"); // Provide user feedback on error\n    }\n  };\n  useEffect(() => {\n    const user_id = sessionStorage.getItem(\"user_id\");\n    if (user_id) {\n      setFormValues(prev => ({\n        ...prev,\n        user_id\n      })); // Set user_id on mount\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: callAPI,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current_password\",\n          className: \"form-label\",\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\" // Use password type for security\n          ,\n          name: \"current_password\",\n          className: \"form-control\",\n          id: \"current_password\",\n          placeholder: \"Current Password\",\n          onChange: onChangeHandler,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new_password\",\n          className: \"form-label\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"new_password\",\n          placeholder: \"New Password\",\n          onChange: onChangeHandler,\n          id: \"new_password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_password\",\n          className: \"form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"confirm_password\",\n          placeholder: \"Confirm Password\",\n          onChange: onChangeHandler,\n          id: \"confirm_password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: [\" \", \"Submit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChangePassword, \"oDXApBA0n8DgfpD1iKasqbWZ+Ns=\");\n_c = ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["axios","React","useEffect","useState","apiUrl","jsxDEV","_jsxDEV","ChangePassword","_s","formValues","setFormValues","current_password","new_password","confirm_password","user_id","onChangeHandler","e","target","name","value","console","log","callAPI","preventDefault","sessionStorage","getItem","payload","response","post","status","alert","data","message","error","prev","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/MSMS/frontend/src/pages/ChangePassword.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { apiUrl } from '';\r\n\r\nexport default function ChangePassword() {\r\n  const [formValues, setFormValues] = useState({\r\n    current_password: \"\",\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n    user_id: \"\"\r\n  });\r\n\r\n  const onChangeHandler = (e) => {\r\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n    console.log(formValues); // Be aware this will log the previous state due to the asynchronous nature of setState\r\n  };\r\n\r\n  const callAPI = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    const user_id = sessionStorage.getItem(\"user_id\");\r\n    const payload = { ...formValues, user_id };\r\n\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/user/changepassword`, payload);\r\n      if (response.status === 200) {\r\n        alert(response.data.message || \"Password changed successfully\"); // Ensure the response has a message\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"An error occurred. Please try again.\"); // Provide user feedback on error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const user_id = sessionStorage.getItem(\"user_id\");\r\n    if (user_id) {\r\n      setFormValues(prev => ({ ...prev, user_id })); // Set user_id on mount\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={callAPI}> {/* Added form to handle submission */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"current_password\" className=\"form-label\">\r\n            Current Password\r\n          </label>\r\n          <input\r\n            type=\"password\" // Use password type for security\r\n            name=\"current_password\"\r\n            className=\"form-control\"\r\n            id=\"current_password\"\r\n            placeholder='Current Password'\r\n            onChange={onChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"new_password\" className=\"form-label\">\r\n            New Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"new_password\"\r\n            placeholder='New Password'\r\n            onChange={onChangeHandler}\r\n            id=\"new_password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"confirm_password\" className=\"form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirm_password\"\r\n            placeholder='Confirm Password'\r\n            onChange={onChangeHandler}\r\n            id=\"confirm_password\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\"> {/* Added Bootstrap classes for styling */}\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}