{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\postlogin\\\\User\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Load Stripe outside of a component’s render to avoid recreating the object on every render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your_stripe_publishable_key');\nconst PaymentForm = () => {\n  _s();\n  var _location$state;\n  const [amount, setAmount] = useState(0); // Default amount will be set from the cart\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // Get the passed totalPrice from the Cart page\n  const location = useLocation();\n  const totalPrice = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.totalPrice) || 0;\n\n  // Set the total amount to the price passed from the cart\n  useEffect(() => {\n    setAmount(totalPrice * 100); // Convert to cents\n  }, [totalPrice]);\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    try {\n      // Get the token from localStorage (or any other method you're using to store the token)\n      const token = localStorage.getItem('auth_token'); // Adjust this if you're using another storage method\n\n      if (!token) {\n        setError('Authentication required. Please log in.');\n        setProcessing(false);\n        return;\n      }\n\n      // Confirm card payment with Stripe without the client secret logic\n      const {\n        error: stripeError,\n        paymentIntent\n      } = await stripe.confirmCardPayment('your_client_secret_here',\n      // This would be replaced with the real client secret from your backend\n      {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (stripeError) {\n        setError(stripeError.message);\n      } else if (paymentIntent.status === 'succeeded') {\n        // Make the API request with the Authorization header for placing the order\n        const placeOrderResponse = await fetch('http://localhost:8000/medical_store_app/place-order/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // Include the token in the Authorization header\n          },\n          body: JSON.stringify({\n            amount: totalPrice,\n            payment_method: 'COD'\n          })\n        });\n        if (placeOrderResponse.ok) {\n          alert('Order placed successfully with COD');\n        } else {\n          const errorData = await placeOrderResponse.json();\n          setError(errorData.error || 'Failed to place the order');\n        }\n      }\n    } catch (err) {\n      setError('An error occurred while processing the order');\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount / 100,\n        readOnly: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || processing,\n        style: processing || !stripe ? {\n          ...styles.button,\n          ...styles.buttonDisabled\n        } : styles.button,\n        children: processing ? 'Processing...' : 'Pay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"UB1+w4mmBAg2ioJ6+8dQNDCNuRw=\", false, function () {\n  return [useStripe, useElements, useLocation];\n});\n_c = PaymentForm;\nconst PaymentPage = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 3\n}, this);\n_c2 = PaymentPage;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px',\n    fontFamily: 'Arial, sans-serif',\n    width: '100%',\n    maxWidth: '500px',\n    margin: '0 auto',\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)'\n  },\n  heading: {\n    fontSize: '24px',\n    marginBottom: '20px'\n  },\n  label: {\n    marginBottom: '10px',\n    fontSize: '16px',\n    fontWeight: 'bold'\n  },\n  input: {\n    marginBottom: '20px',\n    padding: '10px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: '1px solid #ddd',\n    width: '100%'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease'\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n    cursor: 'not-allowed'\n  },\n  error: {\n    color: 'red',\n    fontSize: '14px',\n    marginTop: '10px'\n  }\n};\nexport default PaymentPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"PaymentPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","PaymentForm","_s","_location$state","amount","setAmount","error","setError","processing","setProcessing","stripe","elements","location","totalPrice","state","handleSubmit","event","preventDefault","token","localStorage","getItem","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","message","status","placeOrderResponse","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","err","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","value","readOnly","input","disabled","button","buttonDisabled","_c","PaymentPage","_c2","display","flexDirection","alignItems","marginTop","fontFamily","width","maxWidth","margin","padding","borderRadius","boxShadow","fontSize","marginBottom","fontWeight","border","backgroundColor","color","cursor","transition","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/postlogin/User/PaymentForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n\r\n// Load Stripe outside of a component’s render to avoid recreating the object on every render\r\nconst stripePromise = loadStripe('your_stripe_publishable_key');\r\n\r\nconst PaymentForm = () => {\r\n  const [amount, setAmount] = useState(0); // Default amount will be set from the cart\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  // Get the passed totalPrice from the Cart page\r\n  const location = useLocation();\r\n  const totalPrice = location.state?.totalPrice || 0;\r\n\r\n  // Set the total amount to the price passed from the cart\r\n  useEffect(() => {\r\n    setAmount(totalPrice * 100); // Convert to cents\r\n  }, [totalPrice]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    try {\r\n      // Get the token from localStorage (or any other method you're using to store the token)\r\n      const token = localStorage.getItem('auth_token'); // Adjust this if you're using another storage method\r\n\r\n      if (!token) {\r\n        setError('Authentication required. Please log in.');\r\n        setProcessing(false);\r\n        return;\r\n      }\r\n\r\n      // Confirm card payment with Stripe without the client secret logic\r\n      const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(\r\n        'your_client_secret_here', // This would be replaced with the real client secret from your backend\r\n        {\r\n          payment_method: {\r\n            card: elements.getElement(CardElement),\r\n          },\r\n        }\r\n      );\r\n\r\n      if (stripeError) {\r\n        setError(stripeError.message);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        // Make the API request with the Authorization header for placing the order\r\n        const placeOrderResponse = await fetch('http://localhost:8000/medical_store_app/place-order/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`, // Include the token in the Authorization header\r\n          },\r\n          body: JSON.stringify({ amount: totalPrice, payment_method: 'COD' }),\r\n        });\r\n\r\n        if (placeOrderResponse.ok) {\r\n          alert('Order placed successfully with COD');\r\n        } else {\r\n          const errorData = await placeOrderResponse.json();\r\n          setError(errorData.error || 'Failed to place the order');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('An error occurred while processing the order');\r\n    }\r\n\r\n    setProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Payment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label style={styles.label}>Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount / 100}\r\n          readOnly\r\n          style={styles.input}\r\n        />\r\n        <CardElement />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!stripe || processing}\r\n          style={\r\n            processing || !stripe\r\n              ? { ...styles.button, ...styles.buttonDisabled }\r\n              : styles.button\r\n          }\r\n        >\r\n          {processing ? 'Processing...' : 'Pay'}\r\n        </button>\r\n      </form>\r\n      {error && <div style={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PaymentPage = () => (\r\n  <Elements stripe={stripePromise}>\r\n    <PaymentForm />\r\n  </Elements>\r\n);\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    marginBottom: '20px',\r\n  },\r\n  label: {\r\n    marginBottom: '10px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    marginBottom: '20px',\r\n    padding: '10px',\r\n    fontSize: '16px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ddd',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#ccc',\r\n    cursor: 'not-allowed',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: '14px',\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}