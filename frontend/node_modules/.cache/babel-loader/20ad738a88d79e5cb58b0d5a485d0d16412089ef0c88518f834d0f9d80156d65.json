{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Booking = () => {\n//   const [bookings, setBookings] = useState([]);\n//   const [isAdmin, setIsAdmin] = useState(false);\n//   const navigate = useNavigate();\n//   const userId = sessionStorage.getItem(\"user_id\");\n\n//   useEffect(() => {\n//     const fetchBookings = async () => {\n//       try {\n//         const response = await axios.get(\n//           `http://localhost:8000/medical_store_app/bookings/${userId}/`\n//         );\n\n//         const updatedBookings = response.data.bookings.map(booking => ({\n//           ...booking,\n//           status: booking.status || \"pending\",\n//         }));\n\n//         setBookings(updatedBookings);\n\n//         const userRole = sessionStorage.getItem(\"user_role\");\n//         if (userRole === 'admin') {\n//           setIsAdmin(true);\n//         }\n\n//       } catch (error) {\n//         console.error(\"Error fetching bookings:\", error);\n//       }\n//     };\n\n//     fetchBookings();\n//   }, [userId]);\n\n//   const handleBackToHome = () => {\n//     navigate(\"/UserProductViews\");\n//   };\n\n//   const handleStatusChange = async (bookingId, newStatus) => {\n//     try {\n//       await axios.post(`http://localhost:8000/medical_store_app/admin/bookings/${bookingId}/update/`, { status: newStatus });\n\n//       setBookings(\n//         bookings.map((booking) =>\n//           booking.id === bookingId ? { ...booking, status: newStatus } : booking\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error updating status:\", error);\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <button style={styles.backButton} onClick={handleBackToHome}>\n//         Back to Shopping\n//       </button>\n//       <h1 style={styles.heading}>Your Bookings</h1>\n//       <table style={styles.table}>\n//         <thead>\n//           <tr>\n//             <th style={styles.tableHeader}>Customer ID</th>\n//             <th style={styles.tableHeader}>Medicine</th>\n//             <th style={styles.tableHeader}>Quantity</th>\n//             <th style={styles.tableHeader}>Price</th>\n//             <th style={styles.tableHeader}>Status</th>\n//             <th style={styles.tableHeader}>Booking Date</th>\n//             {isAdmin && <th style={styles.tableHeader}>Actions</th>}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {bookings.map((booking) => (\n//             <tr key={booking.id}>\n//               <td>{booking.product.user_id}</td>\n//               <td>{booking.product.name}</td>\n//               <td>{booking.quantity}</td>\n//               <td>${(booking.product.price).toFixed(2)}</td>\n//               <td>\n//                 <span style={getStatusStyle(booking.status)}>{booking.status}</span>\n//               </td>\n//               <td>{new Date(booking.booking_date).toLocaleString()}</td>\n//               {isAdmin && (\n//                 <td>\n//                   <select\n//                     value={booking.status}\n//                     onChange={(e) => handleStatusChange(booking.id, e.target.value)}\n//                     style={styles.statusSelect}\n//                   >\n//                     <option value=\"pending\">Pending</option>\n//                     <option value=\"confirmed\">Confirmed</option>\n//                     <option value=\"rejected\">Rejected</option>\n//                   </select>\n//                 </td>\n//               )}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// const getStatusStyle = (status) => {\n//   switch (status) {\n//     case \"confirmed\":\n//       return { color: \"green\", fontWeight: \"bold\" };\n//     case \"pending\":\n//       return { color: \"orange\", fontWeight: \"bold\" };\n//     case \"rejected\":\n//       return { color: \"red\", fontWeight: \"bold\" };\n//     default:\n//       return { color: \"gray\", fontWeight: \"normal\" };\n//   }\n// };\n\n// const styles = {\n//   container: {\n//     padding: \"70px\",\n//     fontFamily: \"Arial, sans-serif\",\n//   },\n//   backButton: {\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     border: \"none\",\n//     padding: \"10px 20px\",\n//     fontSize: \"1rem\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//   },\n//   heading: {\n//     textAlign: \"center\",\n//     fontSize: \"2rem\",\n//     marginBottom: \"20px\",\n//   },\n//   table: {\n//     width: \"100%\",\n//     borderCollapse: \"collapse\",\n//     marginBottom: \"20px\",\n//   },\n//   tableHeader: {\n//     backgroundColor: \"#f4f4f4\",\n//     padding: \"10px\",\n//     textAlign: \"left\",\n//     fontWeight: \"bold\",\n//   },\n//   statusSelect: {\n//     padding: \"5px\",\n//     borderRadius: \"5px\",\n//     fontSize: \"14px\",\n//     cursor: \"pointer\",\n//   },\n// };\n\n// export default Booking;","map":{"version":3,"names":[],"sources":["C:/msms/msms/frontend/src/postlogin/User/Booking.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const Booking = () => {\r\n//   const [bookings, setBookings] = useState([]);\r\n//   const [isAdmin, setIsAdmin] = useState(false);\r\n//   const navigate = useNavigate();\r\n//   const userId = sessionStorage.getItem(\"user_id\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchBookings = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `http://localhost:8000/medical_store_app/bookings/${userId}/`\r\n//         );\r\n        \r\n//         const updatedBookings = response.data.bookings.map(booking => ({\r\n//           ...booking,\r\n//           status: booking.status || \"pending\",\r\n//         }));\r\n\r\n//         setBookings(updatedBookings);\r\n        \r\n//         const userRole = sessionStorage.getItem(\"user_role\");\r\n//         if (userRole === 'admin') {\r\n//           setIsAdmin(true);\r\n//         }\r\n\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching bookings:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchBookings();\r\n//   }, [userId]);\r\n\r\n//   const handleBackToHome = () => {\r\n//     navigate(\"/UserProductViews\");\r\n//   };\r\n\r\n//   const handleStatusChange = async (bookingId, newStatus) => {\r\n//     try {\r\n//       await axios.post(`http://localhost:8000/medical_store_app/admin/bookings/${bookingId}/update/`, { status: newStatus });\r\n\r\n//       setBookings(\r\n//         bookings.map((booking) =>\r\n//           booking.id === bookingId ? { ...booking, status: newStatus } : booking\r\n//         )\r\n//       );\r\n//     } catch (error) {\r\n//       console.error(\"Error updating status:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <button style={styles.backButton} onClick={handleBackToHome}>\r\n//         Back to Shopping\r\n//       </button>\r\n//       <h1 style={styles.heading}>Your Bookings</h1>\r\n//       <table style={styles.table}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th style={styles.tableHeader}>Customer ID</th>\r\n//             <th style={styles.tableHeader}>Medicine</th>\r\n//             <th style={styles.tableHeader}>Quantity</th>\r\n//             <th style={styles.tableHeader}>Price</th>\r\n//             <th style={styles.tableHeader}>Status</th>\r\n//             <th style={styles.tableHeader}>Booking Date</th>\r\n//             {isAdmin && <th style={styles.tableHeader}>Actions</th>}\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {bookings.map((booking) => (\r\n//             <tr key={booking.id}>\r\n//               <td>{booking.product.user_id}</td>\r\n//               <td>{booking.product.name}</td>\r\n//               <td>{booking.quantity}</td>\r\n//               <td>${(booking.product.price).toFixed(2)}</td>\r\n//               <td>\r\n//                 <span style={getStatusStyle(booking.status)}>{booking.status}</span>\r\n//               </td>\r\n//               <td>{new Date(booking.booking_date).toLocaleString()}</td>\r\n//               {isAdmin && (\r\n//                 <td>\r\n//                   <select\r\n//                     value={booking.status}\r\n//                     onChange={(e) => handleStatusChange(booking.id, e.target.value)}\r\n//                     style={styles.statusSelect}\r\n//                   >\r\n//                     <option value=\"pending\">Pending</option>\r\n//                     <option value=\"confirmed\">Confirmed</option>\r\n//                     <option value=\"rejected\">Rejected</option>\r\n//                   </select>\r\n//                 </td>\r\n//               )}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const getStatusStyle = (status) => {\r\n//   switch (status) {\r\n//     case \"confirmed\":\r\n//       return { color: \"green\", fontWeight: \"bold\" };\r\n//     case \"pending\":\r\n//       return { color: \"orange\", fontWeight: \"bold\" };\r\n//     case \"rejected\":\r\n//       return { color: \"red\", fontWeight: \"bold\" };\r\n//     default:\r\n//       return { color: \"gray\", fontWeight: \"normal\" };\r\n//   }\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     padding: \"70px\",\r\n//     fontFamily: \"Arial, sans-serif\",\r\n//   },\r\n//   backButton: {\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     padding: \"10px 20px\",\r\n//     fontSize: \"1rem\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   heading: {\r\n//     textAlign: \"center\",\r\n//     fontSize: \"2rem\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   table: {\r\n//     width: \"100%\",\r\n//     borderCollapse: \"collapse\",\r\n//     marginBottom: \"20px\",\r\n//   },\r\n//   tableHeader: {\r\n//     backgroundColor: \"#f4f4f4\",\r\n//     padding: \"10px\",\r\n//     textAlign: \"left\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n//   statusSelect: {\r\n//     padding: \"5px\",\r\n//     borderRadius: \"5px\",\r\n//     fontSize: \"14px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n// };\r\n\r\n// export default Booking;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}