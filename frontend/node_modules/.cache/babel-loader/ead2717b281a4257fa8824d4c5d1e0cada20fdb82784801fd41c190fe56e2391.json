{"ast":null,"code":"var _jsxFileName = \"D:\\\\msms\\\\frontend\\\\src\\\\Userpage\\\\userproductviews.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API_URL from './config'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProductViews = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchMedicines = async () => {\n    try {\n      const response = await fetch(`${API_URL}//medicines/`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${yourAuthToken}`,\n          // Replace yourAuthToken with the actual token\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setMedicines(data);\n      console.log('Fetched Medicines:', data);\n    } catch (error) {\n      setError('Error fetching medicines');\n      console.error('Error fetching medicines:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), medicines.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No medicines found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [medicine.name, \" - \", medicine.description]\n      }, medicine.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProductViews, \"wMAsACZjik3jxMbSsv9gygzP1Qg=\");\n_c = UserProductViews;\nexport default UserProductViews;\nvar _c;\n$RefreshReg$(_c, \"UserProductViews\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","jsxDEV","_jsxDEV","UserProductViews","_s","medicines","setMedicines","error","setError","fetchMedicines","response","fetch","method","headers","yourAuthToken","ok","Error","data","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","medicine","name","description","id","_c","$RefreshReg$"],"sources":["D:/msms/frontend/src/Userpage/userproductviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API_URL from './config'; // Adjust the path as necessary\r\n\r\nconst UserProductViews = () => {\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchMedicines = async () => {\r\n        try {\r\n            const response = await fetch(`${API_URL}//medicines/`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${yourAuthToken}`, // Replace yourAuthToken with the actual token\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setMedicines(data);\r\n            console.log('Fetched Medicines:', data);\r\n        } catch (error) {\r\n            setError('Error fetching medicines');\r\n            console.error('Error fetching medicines:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMedicines();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Available Medicines</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {medicines.length === 0 ? (\r\n                <p>No medicines found.</p>\r\n            ) : (\r\n                <ul>\r\n                    {medicines.map((medicine) => (\r\n                        <li key={medicine.id}>\r\n                            {medicine.name} - {medicine.description}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProductViews;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,OAAO,cAAc,EAAE;QACnDY,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUC,aAAa,EAAE;UAAE;UAC5C,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCZ,YAAY,CAACW,IAAI,CAAC;MAClBE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC;IAC3C,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZC,QAAQ,CAAC,0BAA0B,CAAC;MACpCW,OAAO,CAACZ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZW,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BlB,KAAK,iBAAIL,OAAA;MAAGwB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDpB,SAAS,CAACuB,MAAM,KAAK,CAAC,gBACnB1B,OAAA;MAAAmB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1BvB,OAAA;MAAAmB,QAAA,EACKhB,SAAS,CAACwB,GAAG,CAAEC,QAAQ,iBACpB5B,OAAA;QAAAmB,QAAA,GACKS,QAAQ,CAACC,IAAI,EAAC,KAAG,EAACD,QAAQ,CAACE,WAAW;MAAA,GADlCF,QAAQ,CAACG,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrB,EAAA,CA9CID,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAgDtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}