{"ast":null,"code":"import axios from \"axios\";\nconst apiUrl = \"http://localhost:8000\";\nconst axiosInstance = axios.create({\n  baseURL: apiUrl,\n  timeout: 5000,\n  headers: {\n    accept: \"application/json\"\n  }\n});\n\n// Function to perform login\nconst login = async formValues => {\n  try {\n    const response = await axiosInstance.post(`/medicalstoreapp/api/token/`, {\n      username: formValues.username,\n      password: formValues.password\n    });\n    return response.data; // Return the response data\n  } catch (error) {\n    // Handle error, rethrow if necessary\n    throw error; // Allows handling in the calling component\n  }\n};\nconst generateRefreshToken = async error => {\n  let refresh = false;\n  if (error.response.status === 401 && !refresh) {\n    refresh = true;\n    try {\n      const response = await axios.post(`${apiUrl}/api/token/refresh/`, {\n        refresh: sessionStorage.getItem(\"refresh_token\")\n      }, {\n        withCredentials: false\n      });\n      if (response.status === 200) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.access}`;\n        // Optionally retry the failed request\n        // return axios(error.config);\n      }\n    } catch (refreshError) {\n      console.error(\"Error refreshing token:\", refreshError);\n      // Handle refresh token error if needed\n    }\n  }\n  refresh = false;\n  return error;\n};\nexport { apiUrl, axiosInstance, generateRefreshToken, login };","map":{"version":3,"names":["axios","apiUrl","axiosInstance","create","baseURL","timeout","headers","accept","login","formValues","response","post","username","password","data","error","generateRefreshToken","refresh","status","sessionStorage","getItem","withCredentials","defaults","common","access","refreshError","console"],"sources":["D:/MSMS/frontend/src/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiUrl = \"http://localhost:8000\";\r\nconst axiosInstance = axios.create({\r\n  baseURL: apiUrl,\r\n  timeout: 5000,\r\n  headers: {\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n// Function to perform login\r\nconst login = async (formValues) => {\r\n  try {\r\n    const response = await axiosInstance.post(`/medicalstoreapp/api/token/`, {\r\n      username: formValues.username,\r\n      password: formValues.password,\r\n    });\r\n    return response.data; // Return the response data\r\n  } catch (error) {\r\n    // Handle error, rethrow if necessary\r\n    throw error; // Allows handling in the calling component\r\n  }\r\n};\r\n\r\nconst generateRefreshToken = async (error) => {\r\n  let refresh = false;\r\n  if (error.response.status === 401 && !refresh) {\r\n    refresh = true;\r\n    try {\r\n      const response = await axios.post(\r\n        `${apiUrl}/api/token/refresh/`,\r\n        {\r\n          refresh: sessionStorage.getItem(\"refresh_token\"),\r\n        },\r\n        { withCredentials: false }\r\n      );\r\n      if (response.status === 200) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.access}`;\r\n        // Optionally retry the failed request\r\n        // return axios(error.config);\r\n      }\r\n    } catch (refreshError) {\r\n      console.error(\"Error refreshing token:\", refreshError);\r\n      // Handle refresh token error if needed\r\n    }\r\n  }\r\n\r\n  refresh = false;\r\n  return error;\r\n};\r\n\r\nexport { apiUrl, axiosInstance, generateRefreshToken, login };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;AACtC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,MAAM;EACfI,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACPC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,KAAK,GAAG,MAAOC,UAAU,IAAK;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,aAAa,CAACS,IAAI,CAAC,6BAA6B,EAAE;MACvEC,QAAQ,EAAEH,UAAU,CAACG,QAAQ;MAC7BC,QAAQ,EAAEJ,UAAU,CAACI;IACvB,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAOD,KAAK,IAAK;EAC5C,IAAIE,OAAO,GAAG,KAAK;EACnB,IAAIF,KAAK,CAACL,QAAQ,CAACQ,MAAM,KAAK,GAAG,IAAI,CAACD,OAAO,EAAE;IAC7CA,OAAO,GAAG,IAAI;IACd,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,GAAGV,MAAM,qBAAqB,EAC9B;QACEgB,OAAO,EAAEE,cAAc,CAACC,OAAO,CAAC,eAAe;MACjD,CAAC,EACD;QAAEC,eAAe,EAAE;MAAM,CAC3B,CAAC;MACD,IAAIX,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3BlB,KAAK,CAACsB,QAAQ,CAAChB,OAAO,CAACiB,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUb,QAAQ,CAACI,IAAI,CAACU,MAAM,EAAE;QACjF;QACA;MACF;IACF,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrBC,OAAO,CAACX,KAAK,CAAC,yBAAyB,EAAEU,YAAY,CAAC;MACtD;IACF;EACF;EAEAR,OAAO,GAAG,KAAK;EACf,OAAOF,KAAK;AACd,CAAC;AAED,SAASd,MAAM,EAAEC,aAAa,EAAEc,oBAAoB,EAAER,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}