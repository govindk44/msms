{"ast":null,"code":"var _jsxFileName = \"D:\\\\msms\\\\frontend\\\\src\\\\Userpage\\\\userproductviews.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProductViews = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const fetchMedicines = async () => {\n    try {\n      const response = await fetch('/medical_store_app/api/medicine/');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setMedicines(data); // Store fetched data in state\n      console.log('Fetched Medicines:', data); // Debugging line\n    } catch (error) {\n      console.error('Error fetching medicines:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMedicines(); // Fetch medicines on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), medicines.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No medicines found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) // Corrected conditional check\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [medicine.name, \" - \", medicine.description]\n      }, medicine.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProductViews, \"ZxXDyD5zuog6csW41MwgtHmUf9w=\");\n_c = UserProductViews;\nexport default UserProductViews;\nvar _c;\n$RefreshReg$(_c, \"UserProductViews\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserProductViews","_s","medicines","setMedicines","fetchMedicines","response","fetch","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","medicine","name","description","id","_c","$RefreshReg$"],"sources":["D:/msms/frontend/src/Userpage/userproductviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst UserProductViews = () => {\r\n    const [medicines, setMedicines] = useState([]);\r\n\r\n    const fetchMedicines = async () => {\r\n        try {\r\n            const response = await fetch('/medical_store_app/api/medicine/');\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setMedicines(data); // Store fetched data in state\r\n            console.log('Fetched Medicines:', data); // Debugging line\r\n        } catch (error) {\r\n            console.error('Error fetching medicines:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMedicines(); // Fetch medicines on component mount\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Available Medicines</h1>\r\n            {medicines.length === 0 ? (\r\n                <p>No medicines found.</p> // Corrected conditional check\r\n            ) : (\r\n                <ul>\r\n                    {medicines.map((medicine) => (\r\n                        <li key={medicine.id}>\r\n                            {medicine.name} - {medicine.description}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProductViews;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MAChE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,YAAY,CAACM,IAAI,CAAC,CAAC,CAAC;MACpBE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZQ,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BhB,SAAS,CAACiB,MAAM,KAAK,CAAC,gBACnBpB,OAAA;MAAAe,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAE3BnB,OAAA;MAAAe,QAAA,EACKZ,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACpBtB,OAAA;QAAAe,QAAA,GACKO,QAAQ,CAACC,IAAI,EAAC,KAAG,EAACD,QAAQ,CAACE,WAAW;MAAA,GADlCF,QAAQ,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CArCID,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAuCtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}