{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\postlogin\\\\User\\\\PrescriptionForm .js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrescriptionCreateForm() {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [formData, setFormData] = useState({\n    medicine_id: \"\",\n    quantity: \"\",\n    notes: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Fetch available medicines from the API\n  useEffect(() => {\n    fetch(\"/api/medicines/\").then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setMedicines(data);\n      } else {\n        console.error(\"Medicine data is not in expected format:\", data);\n        setMedicines([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching medicines:\", error);\n      setError(\"Failed to load medicines. Please try again later.\");\n    });\n  }, []);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    fetch(\"/api/prescriptions/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      setLoading(false);\n      if (response.ok) {\n        setSuccessMessage(\"Prescription created successfully!\");\n        setFormData({\n          medicine_id: \"\",\n          quantity: \"\",\n          notes: \"\"\n        });\n      } else {\n        return response.json().then(data => {\n          throw new Error(data.error || \"Failed to create prescription.\");\n        });\n      }\n    }).catch(error => {\n      setLoading(false);\n      setError(error.message || \"An error occurred. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Prescription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"medicine_id\",\n          children: \"Select Medicine:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"medicine_id\",\n          name: \"medicine_id\",\n          value: formData.medicine_id,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Medicine --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), medicines.map(medicine => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: medicine.id,\n            children: [medicine.name, \" - \\u20B9\", medicine.price]\n          }, medicine.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quantity\",\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"quantity\",\n          name: \"quantity\",\n          value: formData.quantity,\n          onChange: handleChange,\n          required: true,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          children: \"Notes (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notes\",\n          name: \"notes\",\n          value: formData.notes,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Creating...\" : \"Create Prescription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(PrescriptionCreateForm, \"Cs9R/RYCsy2PmDnLOKnhwuLR3iA=\");\n_c = PrescriptionCreateForm;\nexport default PrescriptionCreateForm;\nvar _c;\n$RefreshReg$(_c, \"PrescriptionCreateForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PrescriptionCreateForm","_s","medicines","setMedicines","formData","setFormData","medicine_id","quantity","notes","loading","setLoading","error","setError","successMessage","setSuccessMessage","fetch","then","response","json","data","Array","isArray","console","catch","handleChange","e","name","value","target","handleSubmit","preventDefault","method","headers","body","JSON","stringify","ok","Error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","id","onChange","required","map","medicine","price","type","min","disabled","_c","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/postlogin/User/PrescriptionForm .js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction PrescriptionCreateForm() {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    medicine_id: \"\",\r\n    quantity: \"\",\r\n    notes: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  // Fetch available medicines from the API\r\n  useEffect(() => {\r\n    fetch(\"/api/medicines/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Array.isArray(data)) {\r\n          setMedicines(data);\r\n        } else {\r\n          console.error(\"Medicine data is not in expected format:\", data);\r\n          setMedicines([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching medicines:\", error);\r\n        setError(\"Failed to load medicines. Please try again later.\");\r\n      });\r\n  }, []);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n    fetch(\"/api/prescriptions/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        if (response.ok) {\r\n          setSuccessMessage(\"Prescription created successfully!\");\r\n          setFormData({\r\n            medicine_id: \"\",\r\n            quantity: \"\",\r\n            notes: \"\",\r\n          });\r\n        } else {\r\n          return response.json().then((data) => {\r\n            throw new Error(data.error || \"Failed to create prescription.\");\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setError(error.message || \"An error occurred. Please try again.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Prescription</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"medicine_id\">Select Medicine:</label>\r\n          <select\r\n            id=\"medicine_id\"\r\n            name=\"medicine_id\"\r\n            value={formData.medicine_id}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">-- Select Medicine --</option>\r\n            {medicines.map((medicine) => (\r\n              <option key={medicine.id} value={medicine.id}>\r\n                {medicine.name} - ₹{medicine.price}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"quantity\">Quantity:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"quantity\"\r\n            name=\"quantity\"\r\n            value={formData.quantity}\r\n            onChange={handleChange}\r\n            required\r\n            min=\"1\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"notes\">Notes (optional):</label>\r\n          <textarea\r\n            id=\"notes\"\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Creating...\" : \"Create Prescription\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrescriptionCreateForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}