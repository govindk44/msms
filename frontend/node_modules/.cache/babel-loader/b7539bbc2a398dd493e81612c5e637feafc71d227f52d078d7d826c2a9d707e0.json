{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const Checkout = () => {\n//   const [paymentMethod, setPaymentMethod] = useState(\"COD\");\n//   const [address, setAddress] = useState(\"\");\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [userAddress, setUserAddress] = useState(null);\n//   const [cartItems, setCartItems] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchUserAddress();\n//     fetchCartItems();\n//   }, []);\n\n//   const fetchUserAddress = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:8000/medical_store_app/user/address/\");\n//       if (response.data.address) {\n//         setUserAddress(response.data.address);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching user address:\", error);\n//     }\n//   };\n\n//   const fetchCartItems = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:8000/medical_store_app/cart/\");\n//       setCartItems(response.data.items || []);\n//     } catch (error) {\n//       console.error(\"Error fetching cart items:\", error);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (address.trim() === \"\") {\n//       alert(\"Please enter a valid address.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     try {\n//       const orderData = {\n//         payment_method: paymentMethod,\n//         address: address,\n//         items: cartItems, // Include cart items in the order data\n//       };\n\n//       const response = await axios.post(\"http://localhost:8000/medical_store_app/order/\", orderData);\n//       console.log(\"Order submitted successfully:\", response.data);\n//       setIsSubmitted(true);\n\n//       setTimeout(() => {\n//         navigate(\"/order-confirmation\");\n//       }, 2000);\n\n//     } catch (error) {\n//       console.error(\"Error submitting order:\", error);\n//       alert(\"There was an error submitting your order. Please try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {loading && (\n//         <span style={{ display: \"flex\" }}>\n//           <h5>Getting Checkout Info...</h5>\n//         </span>\n//       )}\n\n//       {!loading && (\n//         <div style={styles.container}>\n//           <h3>Checkout Summary</h3>\n\n//           <div style={styles.formGroup}>\n//             <h3>Billing Address</h3>\n//             {userAddress ? (\n//               <div>\n//                 <p>{userAddress}</p>\n//                 <Link className=\"ml-2 mt-2\" to=\"/all-addresses/\">Edit/Add Address</Link>\n//               </div>\n//             ) : (\n//               <div>\n//                 <p>No address found. Please <Link to=\"/all-addresses/\">add a billing address</Link>.</p>\n//               </div>\n//             )}\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <h3>Cart Items</h3>\n//             {cartItems.length > 0 ? (\n//               <ul>\n//                 {cartItems.map((item, index) => (\n//                   <li key={index}>\n//                     <strong>{item.name}</strong> - {item.quantity} x ${item.price.toFixed(2)}\n//                   </li>\n//                 ))}\n//               </ul>\n//             ) : (\n//               <p>No items in the cart.</p>\n//             )}\n//           </div>\n\n//           <div style={styles.formGroup}>\n//             <h3>Payments Section</h3>\n//             <label>\n//               Payment Method:\n//               <select value={paymentMethod} onChange={(e) => setPaymentMethod(e.target.value)}>\n//                 <option value=\"COD\">Cash on Delivery</option>\n//                 <option value=\"Credit Card\">Credit Card</option>\n//               </select>\n//             </label>\n//           </div>\n\n//           <button\n//             style={styles.submitButton}\n//             onClick={handleSubmit}\n//             disabled={loading}\n//           >\n//             {loading ? \"Submitting Order...\" : \"Submit Order\"}\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     padding: \"80px\",\n//     fontFamily: \"Arial, sans-serif\",\n//     maxWidth: \"600px\",\n//     margin: \"0 auto\",\n//     backgroundColor: \"#f9f9f9\",\n//     borderRadius: \"8px\",\n//     boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n//   },\n//   heading: {\n//     textAlign: \"center\",\n//     fontSize: \"2rem\",\n//     marginBottom: \"20px\",\n//     color: \"#333\",\n//   },\n//   formGroup: {\n//     marginBottom: \"15px\",\n//   },\n//   label: {\n//     fontSize: \"1.1rem\",\n//     fontWeight: \"bold\",\n//     marginBottom: \"5px\",\n//     display: \"block\",\n//   },\n//   input: {\n//     width: \"100%\",\n//     padding: \"10px\",\n//     fontSize: \"1rem\",\n//     borderRadius: \"4px\",\n//     border: \"1px solid #ccc\",\n//     boxSizing: \"border-box\",\n//     height: \"100px\",\n//   },\n//   radioContainer: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//   },\n//   radioLabel: {\n//     fontSize: \"1rem\",\n//     marginBottom: \"10px\",\n//   },\n//   submitButton: {\n//     width: \"100%\",\n//     padding: \"12px\",\n//     fontSize: \"1.2rem\",\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n//     cursor: \"pointer\",\n//     transition: \"background-color 0.3s ease\",\n//   },\n//   successMessage: {\n//     fontSize: \"1.2rem\",\n//     color: \"#4CAF50\",\n//     textAlign: \"center\",\n//     fontWeight: \"bold\",\n//   },\n// };\n\n// export default Checkout;","map":{"version":3,"names":[],"sources":["C:/msms/msms/frontend/src/postlogin/User/checkout.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Checkout = () => {\r\n//   const [paymentMethod, setPaymentMethod] = useState(\"COD\");\r\n//   const [address, setAddress] = useState(\"\");\r\n//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [userAddress, setUserAddress] = useState(null);\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetchUserAddress();\r\n//     fetchCartItems();\r\n//   }, []);\r\n\r\n//   const fetchUserAddress = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:8000/medical_store_app/user/address/\");\r\n//       if (response.data.address) {\r\n//         setUserAddress(response.data.address);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching user address:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCartItems = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:8000/medical_store_app/cart/\");\r\n//       setCartItems(response.data.items || []);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching cart items:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (address.trim() === \"\") {\r\n//       alert(\"Please enter a valid address.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n\r\n//     try {\r\n//       const orderData = {\r\n//         payment_method: paymentMethod,\r\n//         address: address,\r\n//         items: cartItems, // Include cart items in the order data\r\n//       };\r\n\r\n//       const response = await axios.post(\"http://localhost:8000/medical_store_app/order/\", orderData);\r\n//       console.log(\"Order submitted successfully:\", response.data);\r\n//       setIsSubmitted(true);\r\n\r\n//       setTimeout(() => {\r\n//         navigate(\"/order-confirmation\");\r\n//       }, 2000);\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting order:\", error);\r\n//       alert(\"There was an error submitting your order. Please try again.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {loading && (\r\n//         <span style={{ display: \"flex\" }}>\r\n//           <h5>Getting Checkout Info...</h5>\r\n//         </span>\r\n//       )}\r\n\r\n//       {!loading && (\r\n//         <div style={styles.container}>\r\n//           <h3>Checkout Summary</h3>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <h3>Billing Address</h3>\r\n//             {userAddress ? (\r\n//               <div>\r\n//                 <p>{userAddress}</p>\r\n//                 <Link className=\"ml-2 mt-2\" to=\"/all-addresses/\">Edit/Add Address</Link>\r\n//               </div>\r\n//             ) : (\r\n//               <div>\r\n//                 <p>No address found. Please <Link to=\"/all-addresses/\">add a billing address</Link>.</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <h3>Cart Items</h3>\r\n//             {cartItems.length > 0 ? (\r\n//               <ul>\r\n//                 {cartItems.map((item, index) => (\r\n//                   <li key={index}>\r\n//                     <strong>{item.name}</strong> - {item.quantity} x ${item.price.toFixed(2)}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             ) : (\r\n//               <p>No items in the cart.</p>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div style={styles.formGroup}>\r\n//             <h3>Payments Section</h3>\r\n//             <label>\r\n//               Payment Method:\r\n//               <select value={paymentMethod} onChange={(e) => setPaymentMethod(e.target.value)}>\r\n//                 <option value=\"COD\">Cash on Delivery</option>\r\n//                 <option value=\"Credit Card\">Credit Card</option>\r\n//               </select>\r\n//             </label>\r\n//           </div>\r\n\r\n//           <button\r\n//             style={styles.submitButton}\r\n//             onClick={handleSubmit}\r\n//             disabled={loading}\r\n//           >\r\n//             {loading ? \"Submitting Order...\" : \"Submit Order\"}\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     padding: \"80px\",\r\n//     fontFamily: \"Arial, sans-serif\",\r\n//     maxWidth: \"600px\",\r\n//     margin: \"0 auto\",\r\n//     backgroundColor: \"#f9f9f9\",\r\n//     borderRadius: \"8px\",\r\n//     boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n//   },\r\n//   heading: {\r\n//     textAlign: \"center\",\r\n//     fontSize: \"2rem\",\r\n//     marginBottom: \"20px\",\r\n//     color: \"#333\",\r\n//   },\r\n//   formGroup: {\r\n//     marginBottom: \"15px\",\r\n//   },\r\n//   label: {\r\n//     fontSize: \"1.1rem\",\r\n//     fontWeight: \"bold\",\r\n//     marginBottom: \"5px\",\r\n//     display: \"block\",\r\n//   },\r\n//   input: {\r\n//     width: \"100%\",\r\n//     padding: \"10px\",\r\n//     fontSize: \"1rem\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"1px solid #ccc\",\r\n//     boxSizing: \"border-box\",\r\n//     height: \"100px\",\r\n//   },\r\n//   radioContainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//   },\r\n//   radioLabel: {\r\n//     fontSize: \"1rem\",\r\n//     marginBottom: \"10px\",\r\n//   },\r\n//   submitButton: {\r\n//     width: \"100%\",\r\n//     padding: \"12px\",\r\n//     fontSize: \"1.2rem\",\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     borderRadius: \"5px\",\r\n//     cursor: \"pointer\",\r\n//     transition: \"background-color 0.3s ease\",\r\n//   },\r\n//   successMessage: {\r\n//     fontSize: \"1.2rem\",\r\n//     color: \"#4CAF50\",\r\n//     textAlign: \"center\",\r\n//     fontWeight: \"bold\",\r\n//   },\r\n// };\r\n\r\n// export default Checkout;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}