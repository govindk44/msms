{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\prelogin\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const [totalAmount, setTotalAmount] = useState(0);\n  // const [paymentMethod, setPaymentMethod] = useState('creditCard'); // default to credit card\n  const [paymentDetails, setPaymentDetails] = useState({\n    cardNumber: '',\n    expiryDate: '',\n    cvv: ''\n  });\n  useEffect(() => {\n    // Get the total amount from the Cart (via props or API)\n    // In this case, I am assuming you're passing it as a prop or fetching it from an API\n    const fetchTotalAmount = async () => {\n      const response = await fetch('/api/cart/total');\n      const data = await response.json();\n      setTotalAmount(data.totalAmount);\n    };\n    fetchTotalAmount();\n  }, []);\n  const handlePayment = async () => {\n    // Send payment details to backend for processing\n    const response = await fetch('/api/payment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        totalAmount,\n        paymentMethod,\n        paymentDetails\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Payment successful!');\n    } else {\n      alert('Payment failed, please try again.');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPaymentDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Amount: $\", totalAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [paymentMethod === 'creditCard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Card Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cardNumber\",\n          value: paymentDetails.cardNumber,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Expiry Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"expiryDate\",\n          value: paymentDetails.expiryDate,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CVV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cvv\",\n          value: paymentDetails.cvv,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePayment,\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"owws0Ptk8Zn2mRxi7LE0TPUvLL0=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentPage","_s","totalAmount","setTotalAmount","paymentDetails","setPaymentDetails","cardNumber","expiryDate","cvv","fetchTotalAmount","response","fetch","data","json","handlePayment","method","headers","body","JSON","stringify","paymentMethod","success","alert","handleChange","e","name","value","target","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/prelogin/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PaymentPage = () => {\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  // const [paymentMethod, setPaymentMethod] = useState('creditCard'); // default to credit card\r\n  const [paymentDetails, setPaymentDetails] = useState({\r\n    cardNumber: '',\r\n    expiryDate: '',\r\n    cvv: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Get the total amount from the Cart (via props or API)\r\n    // In this case, I am assuming you're passing it as a prop or fetching it from an API\r\n    const fetchTotalAmount = async () => {\r\n      const response = await fetch('/api/cart/total');\r\n      const data = await response.json();\r\n      setTotalAmount(data.totalAmount);\r\n    };\r\n    fetchTotalAmount();\r\n  }, []);\r\n\r\n  const handlePayment = async () => {\r\n    // Send payment details to backend for processing\r\n    const response = await fetch('/api/payment', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        totalAmount,\r\n        paymentMethod,\r\n        paymentDetails\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      alert('Payment successful!');\r\n    } else {\r\n      alert('Payment failed, please try again.');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPaymentDetails((prev) => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Payment Page</h2>\r\n      <p>Total Amount: ${totalAmount}</p>\r\n      \r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        {paymentMethod === 'creditCard' && (\r\n          <>\r\n            <label>Card Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"cardNumber\"\r\n              value={paymentDetails.cardNumber}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <label>Expiry Date</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"expiryDate\"\r\n              value={paymentDetails.expiryDate}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <label>CVV</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"cvv\"\r\n              value={paymentDetails.cvv}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <button type=\"button\" onClick={handlePayment}>Pay Now</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}