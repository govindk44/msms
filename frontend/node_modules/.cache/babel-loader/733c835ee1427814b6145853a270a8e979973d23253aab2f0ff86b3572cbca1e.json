{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\prelogin\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/medical_store_app/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Login Response:', data); // Log the response\n\n        const {\n          access,\n          refresh\n        } = data; // These are your tokens\n        if (!access || !refresh) {\n          throw new Error('Missing tokens');\n        }\n\n        // Fetch user type from a separate endpoint, if not included in the login response\n        const userDetailsResponse = await fetch('http://localhost:8000/medical_store_app/user-details/', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${access}`\n          }\n        });\n        if (userDetailsResponse.ok) {\n          const userDetails = await userDetailsResponse.json();\n          const {\n            user_type\n          } = userDetails;\n          if (!user_type) {\n            throw new Error('Missing user type');\n          }\n\n          // Save tokens and user info\n          localStorage.setItem('auth_token', access);\n          sessionStorage.setItem('user_type', user_type);\n\n          // Navigate based on user type\n          console.log('User Type:', user_type);\n          if (user_type === 'admin') {\n            alert('Admin login successfully!');\n            navigate('/admin/User');\n          } else if (user_type === 'user') {\n            alert('User login successfully!');\n            navigate('/UserProductViews');\n          } else {\n            alert('Unknown user type. Please contact support.');\n            console.error('Received unknown user type:', user_type);\n          }\n        } else {\n          throw new Error('Failed to fetch user details');\n        }\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Login failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          style: styles.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          style: styles.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ensabnh8awqwln75dYV2FIvVkb0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px',\n    fontFamily: 'Arial, sans-serif',\n    width: '100%',\n    maxWidth: '400px',\n    margin: '0 auto',\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)'\n  },\n  heading: {\n    fontSize: '24px',\n    marginBottom: '20px'\n  },\n  formGroup: {\n    width: '100%',\n    marginBottom: '20px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontSize: '16px',\n    fontWeight: 'bold'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: '1px solid #ddd'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease'\n  },\n  error: {\n    color: 'red',\n    fontSize: '14px',\n    marginTop: '10px'\n  }\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","access","refresh","Error","userDetailsResponse","userDetails","user_type","localStorage","setItem","sessionStorage","alert","errorData","err","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formGroup","label","type","value","onChange","e","target","input","required","button","_c","display","flexDirection","alignItems","marginTop","fontFamily","width","maxWidth","margin","padding","borderRadius","boxShadow","fontSize","marginBottom","fontWeight","border","backgroundColor","color","cursor","transition","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/prelogin/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:8000/medical_store_app/login/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Login Response:', data); // Log the response\r\n  \r\n        const { access, refresh } = data; // These are your tokens\r\n        if (!access || !refresh) {\r\n          throw new Error('Missing tokens');\r\n        }\r\n  \r\n        // Fetch user type from a separate endpoint, if not included in the login response\r\n        const userDetailsResponse = await fetch('http://localhost:8000/medical_store_app/user-details/', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${access}`,\r\n          },\r\n        });\r\n  \r\n        if (userDetailsResponse.ok) {\r\n          const userDetails = await userDetailsResponse.json();\r\n          const { user_type } = userDetails;\r\n          if (!user_type) {\r\n            throw new Error('Missing user type');\r\n          }\r\n  \r\n          // Save tokens and user info\r\n          localStorage.setItem('auth_token', access);\r\n          sessionStorage.setItem('user_type', user_type);\r\n  \r\n          // Navigate based on user type\r\n          console.log('User Type:', user_type);\r\n  \r\n          if (user_type === 'admin') {\r\n            alert('Admin login successfully!');\r\n            navigate('/admin/User');\r\n          } else if (user_type === 'user') {\r\n            alert('User login successfully!');\r\n            navigate('/UserProductViews');\r\n          } else {\r\n            alert('Unknown user type. Please contact support.');\r\n            console.error('Received unknown user type:', user_type);\r\n          }\r\n        } else {\r\n          throw new Error('Failed to fetch user details');\r\n        }\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || 'Login failed. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error during login:', err);\r\n      setError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Login</h2>\r\n      {error && <div style={styles.error}>{error}</div>}\r\n      <form onSubmit={handleLogin}>\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            style={styles.input}\r\n            required\r\n          />\r\n        </div>\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            style={styles.input}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={styles.button}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    width: '100%',\r\n    maxWidth: '400px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    marginBottom: '20px',\r\n  },\r\n  formGroup: {\r\n    width: '100%',\r\n    marginBottom: '20px',\r\n  },\r\n  label: {\r\n    display: 'block',\r\n    marginBottom: '5px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    fontSize: '16px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ddd',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: '14px',\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}