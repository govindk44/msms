{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\postlogin\\\\User\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  var _location$state;\n  const [amount, setAmount] = useState(0); // Default amount will be set from the cart\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n\n  // Get the passed totalPrice from the Cart page\n  const location = useLocation();\n  const totalPrice = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.totalPrice) || 0;\n\n  // Set the total amount to the price passed from the cart\n  useEffect(() => {\n    setAmount(totalPrice * 100); // Convert to cents\n  }, [totalPrice]);\n\n  // Handle form submission for COD payment\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    try {\n      // Simulating COD order placement logic\n      const response = await fetch('http://localhost:8000/place-order/', {\n        // Replace with your actual API endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount,\n          payment_method: 'COD'\n        })\n      });\n      if (response.ok) {\n        alert('Order placed successfully with Cash on Delivery!');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Failed to place order');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount / 100 // Convert back to dollars (e.g., 100 cents = 1 dollar)\n        ,\n        readOnly: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.infoText,\n        children: \"Payment Method: Cash on Delivery (COD)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: processing,\n        style: processing ? {\n          ...styles.button,\n          ...styles.buttonDisabled\n        } : styles.button,\n        children: processing ? 'Processing...' : 'Place Order (COD)'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"P85sS/SV/IZe1TcuV9JiRgoToZY=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentForm;\nconst PaymentPage = () => /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this);\n_c2 = PaymentPage;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px',\n    fontFamily: 'Arial, sans-serif',\n    width: '100%',\n    maxWidth: '500px',\n    margin: '0 auto',\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)'\n  },\n  heading: {\n    fontSize: '24px',\n    marginBottom: '20px'\n  },\n  label: {\n    marginBottom: '10px',\n    fontSize: '16px',\n    fontWeight: 'bold'\n  },\n  input: {\n    marginBottom: '20px',\n    padding: '10px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: '1px solid #ddd',\n    width: '100%'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease'\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n    cursor: 'not-allowed'\n  },\n  infoText: {\n    marginBottom: '10px',\n    fontSize: '16px',\n    fontWeight: 'normal'\n  },\n  error: {\n    color: 'red',\n    fontSize: '14px',\n    marginTop: '10px'\n  }\n};\nexport default PaymentPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"PaymentPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","PaymentForm","_s","_location$state","amount","setAmount","error","setError","processing","setProcessing","location","totalPrice","state","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","payment_method","ok","alert","errorData","json","err","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","value","readOnly","input","infoText","disabled","button","buttonDisabled","_c","PaymentPage","_c2","display","flexDirection","alignItems","marginTop","fontFamily","width","maxWidth","margin","padding","borderRadius","boxShadow","fontSize","marginBottom","fontWeight","border","backgroundColor","color","cursor","transition","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/postlogin/User/PaymentForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst PaymentForm = () => {\r\n  const [amount, setAmount] = useState(0); // Default amount will be set from the cart\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  // Get the passed totalPrice from the Cart page\r\n  const location = useLocation();\r\n  const totalPrice = location.state?.totalPrice || 0;\r\n\r\n  // Set the total amount to the price passed from the cart\r\n  useEffect(() => {\r\n    setAmount(totalPrice * 100); // Convert to cents\r\n  }, [totalPrice]);\r\n\r\n  // Handle form submission for COD payment\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    try {\r\n      // Simulating COD order placement logic\r\n      const response = await fetch('http://localhost:8000/place-order/', {  // Replace with your actual API endpoint\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          amount,\r\n          payment_method: 'COD',\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Order placed successfully with Cash on Delivery!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || 'Failed to place order');\r\n      }\r\n    } catch (err) {\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n\r\n    setProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Payment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label style={styles.label}>Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount / 100}  // Convert back to dollars (e.g., 100 cents = 1 dollar)\r\n          readOnly\r\n          style={styles.input}\r\n        />\r\n        <div style={styles.infoText}>Payment Method: Cash on Delivery (COD)</div>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={processing}\r\n          style={\r\n            processing\r\n              ? { ...styles.button, ...styles.buttonDisabled }\r\n              : styles.button\r\n          }\r\n        >\r\n          {processing ? 'Processing...' : 'Place Order (COD)'}\r\n        </button>\r\n      </form>\r\n      {error && <div style={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PaymentPage = () => (\r\n  <PaymentForm />\r\n);\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    marginBottom: '20px',\r\n  },\r\n  label: {\r\n    marginBottom: '10px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    marginBottom: '20px',\r\n    padding: '10px',\r\n    fontSize: '16px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ddd',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#ccc',\r\n    cursor: 'not-allowed',\r\n  },\r\n  infoText: {\r\n    marginBottom: '10px',\r\n    fontSize: '16px',\r\n    fontWeight: 'normal',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: '14px',\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}