{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\postlogin\\\\Admin\\\\RazorpayPayment .js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RazorpayPayment = ({\n  cartData\n}) => {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const handlePayment = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/create-order/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount\n        })\n      });\n      const data = await response.json();\n      if (data.id) {\n        // Check if Razorpay order ID is returned\n        const options = {\n          key: \"your_razorpay_key_id\",\n          // Replace with your Razorpay Key ID\n          amount: data.amount,\n          currency: data.currency,\n          order_id: data.id,\n          // Use the Razorpay order ID\n          name: \"Your Company Name\",\n          description: \"Test Transaction\",\n          handler: function (response) {\n            console.log(\"Payment successful!\", response);\n            alert(\"Payment successful!\");\n          },\n          prefill: {\n            name: \"Customer Name\",\n            email: \"customer@example.com\",\n            contact: \"9999999999\"\n          },\n          theme: {\n            color: \"#3399cc\"\n          }\n        };\n        const razorpay = new window.Razorpay(options);\n        razorpay.open();\n      } else {\n        console.error(\"Failed to create Razorpay order\");\n      }\n    } catch (error) {\n      console.error(\"Error during payment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Cart Total: \\u20B9\", cartData.reduce((total, item) => total + item.price, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(RazorpayPayment, \"0ZPO5JxKq8uYzHSkldY7pAViR2E=\");\n_c = RazorpayPayment;\nexport default RazorpayPayment;\nvar _c;\n$RefreshReg$(_c, \"RazorpayPayment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RazorpayPayment","cartData","_s","amount","setAmount","handlePayment","response","fetch","method","headers","body","JSON","stringify","data","json","id","options","key","currency","order_id","name","description","handler","console","log","alert","prefill","email","contact","theme","color","razorpay","window","Razorpay","open","error","children","reduce","total","item","price","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/postlogin/Admin/RazorpayPayment .js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst RazorpayPayment = ({ cartData }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const handlePayment = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/create-order/\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ amount }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.id) { // Check if Razorpay order ID is returned\r\n                const options = {\r\n                    key: \"your_razorpay_key_id\", // Replace with your Razorpay Key ID\r\n                    amount: data.amount,\r\n                    currency: data.currency,\r\n                    order_id: data.id, // Use the Razorpay order ID\r\n                    name: \"Your Company Name\",\r\n                    description: \"Test Transaction\",\r\n                    handler: function (response) {\r\n                        console.log(\"Payment successful!\", response);\r\n                        alert(\"Payment successful!\");\r\n                    },\r\n                    prefill: {\r\n                        name: \"Customer Name\",\r\n                        email: \"customer@example.com\",\r\n                        contact: \"9999999999\",\r\n                    },\r\n                    theme: {\r\n                        color: \"#3399cc\",\r\n                    },\r\n                };\r\n\r\n                const razorpay = new window.Razorpay(options);\r\n                razorpay.open();\r\n            } else {\r\n                console.error(\"Failed to create Razorpay order\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error during payment:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Cart Total: â‚¹{cartData.reduce((total, item) => total + item.price, 0)}</h3>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter Amount\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n            <button onClick={handlePayment}>Pay Now</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RazorpayPayment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET;QAAO,CAAC;MACnC,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,EAAE,EAAE;QAAE;QACX,MAAMC,OAAO,GAAG;UACZC,GAAG,EAAE,sBAAsB;UAAE;UAC7Bd,MAAM,EAAEU,IAAI,CAACV,MAAM;UACnBe,QAAQ,EAAEL,IAAI,CAACK,QAAQ;UACvBC,QAAQ,EAAEN,IAAI,CAACE,EAAE;UAAE;UACnBK,IAAI,EAAE,mBAAmB;UACzBC,WAAW,EAAE,kBAAkB;UAC/BC,OAAO,EAAE,SAAAA,CAAUhB,QAAQ,EAAE;YACzBiB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAElB,QAAQ,CAAC;YAC5CmB,KAAK,CAAC,qBAAqB,CAAC;UAChC,CAAC;UACDC,OAAO,EAAE;YACLN,IAAI,EAAE,eAAe;YACrBO,KAAK,EAAE,sBAAsB;YAC7BC,OAAO,EAAE;UACb,CAAC;UACDC,KAAK,EAAE;YACHC,KAAK,EAAE;UACX;QACJ,CAAC;QAED,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAACjB,OAAO,CAAC;QAC7Ce,QAAQ,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACHX,OAAO,CAACY,KAAK,CAAC,iCAAiC,CAAC;MACpD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIpC,OAAA;IAAAqC,QAAA,gBACIrC,OAAA;MAAAqC,QAAA,GAAI,oBAAa,EAACnC,QAAQ,CAACoC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/E7C,OAAA;MACI8C,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAE5C,MAAO;MACd6C,QAAQ,EAAGC,CAAC,IAAK7C,SAAS,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF7C,OAAA;MAAQoD,OAAO,EAAE9C,aAAc;MAAA+B,QAAA,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAAC1C,EAAA,CA3DIF,eAAe;AAAAoD,EAAA,GAAfpD,eAAe;AA6DrB,eAAeA,eAAe;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}