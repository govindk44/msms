{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\postlogin\\\\User\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n\n  // Function to refresh the token using refresh token\n  const refreshToken = async () => {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) {\n      setError('No refresh token available');\n      return null;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/token/refresh/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh: refreshToken\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('auth_token', data.access); // Save the new access token\n        return data.access;\n      } else {\n        setError('Failed to refresh token');\n        return null;\n      }\n    } catch (err) {\n      setError('Error refreshing token');\n      return null;\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (processing) return;\n    setProcessing(true);\n    let token = localStorage.getItem('auth_token');\n    const userId = sessionStorage.getItem('user_id');\n    if (!token || !userId) {\n      setError('Authentication required. Please log in.');\n      setProcessing(false);\n      return;\n    }\n    const orderData = {\n      userId,\n      amount: amount * 100,\n      // Convert amount to paise for the backend\n      payment_method: 'COD' // Example payment method\n    };\n    try {\n      const response = await fetch(`http://localhost:8000/medical_store_app/place-order/${userId}/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(orderData)\n      });\n      if (response.status === 401) {\n        // Token is invalid or expired, try to refresh it\n        token = await refreshToken();\n        if (!token) {\n          setProcessing(false);\n          return;\n        }\n\n        // Retry placing the order with the new token\n        const retryResponse = await fetch(`http://localhost:8000/medical_store_app/place-order/${userId}/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(orderData)\n        });\n        if (retryResponse.ok) {\n          const data = await retryResponse.json();\n          alert(`Order placed successfully: ${data.message}`);\n        } else {\n          const errorData = await retryResponse.json();\n          setError(errorData.error || 'Failed to place the order');\n        }\n      } else if (response.ok) {\n        const data = await response.json();\n        alert(`Order placed successfully: ${data.message}`);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Failed to place the order');\n      }\n    } catch (err) {\n      setError('An error occurred while processing the order');\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: processing,\n      children: processing ? 'Processing...' : 'Place Order'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentForm, \"NJpksa1DjEzu9rXvjI+X2T0GmXk=\");\n_c = PaymentForm;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px',\n    fontFamily: 'Arial, sans-serif',\n    width: '100%',\n    maxWidth: '500px',\n    margin: '0 auto',\n    padding: '20px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)'\n  },\n  heading: {\n    fontSize: '24px',\n    marginBottom: '20px'\n  },\n  label: {\n    marginBottom: '10px',\n    fontSize: '16px',\n    fontWeight: 'bold'\n  },\n  input: {\n    marginBottom: '20px',\n    padding: '10px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: '1px solid #ddd',\n    width: '100%'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease'\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n    cursor: 'not-allowed'\n  },\n  error: {\n    color: 'red',\n    fontSize: '14px',\n    marginTop: '10px'\n  }\n};\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentForm","_s","amount","setAmount","processing","setProcessing","error","setError","refreshToken","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","refresh","ok","data","json","setItem","access","err","handleSubmit","event","preventDefault","token","userId","sessionStorage","orderData","payment_method","status","retryResponse","alert","message","errorData","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","required","disabled","style","color","_c","styles","container","display","flexDirection","alignItems","marginTop","fontFamily","width","maxWidth","margin","padding","borderRadius","boxShadow","heading","fontSize","marginBottom","label","fontWeight","input","border","button","backgroundColor","cursor","transition","buttonDisabled","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/postlogin/User/PaymentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PaymentForm = () => {\r\n    const [amount, setAmount] = useState('');\r\n    const [processing, setProcessing] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // Function to refresh the token using refresh token\r\n    const refreshToken = async () => {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        if (!refreshToken) {\r\n            setError('No refresh token available');\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/token/refresh/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ refresh: refreshToken }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                localStorage.setItem('auth_token', data.access); // Save the new access token\r\n                return data.access;\r\n            } else {\r\n                setError('Failed to refresh token');\r\n                return null;\r\n            }\r\n        } catch (err) {\r\n            setError('Error refreshing token');\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (processing) return;\r\n\r\n        setProcessing(true);\r\n        let token = localStorage.getItem('auth_token');\r\n        const userId = sessionStorage.getItem('user_id');\r\n\r\n        if (!token || !userId) {\r\n            setError('Authentication required. Please log in.');\r\n            setProcessing(false);\r\n            return;\r\n        }\r\n\r\n        const orderData = {\r\n            userId,\r\n            amount: amount * 100,  // Convert amount to paise for the backend\r\n            payment_method: 'COD',  // Example payment method\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/medical_store_app/place-order/${userId}/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(orderData),\r\n            });\r\n\r\n            if (response.status === 401) {\r\n                // Token is invalid or expired, try to refresh it\r\n                token = await refreshToken();\r\n                if (!token) {\r\n                    setProcessing(false);\r\n                    return;\r\n                }\r\n\r\n                // Retry placing the order with the new token\r\n                const retryResponse = await fetch(`http://localhost:8000/medical_store_app/place-order/${userId}/`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify(orderData),\r\n                });\r\n\r\n                if (retryResponse.ok) {\r\n                    const data = await retryResponse.json();\r\n                    alert(`Order placed successfully: ${data.message}`);\r\n                } else {\r\n                    const errorData = await retryResponse.json();\r\n                    setError(errorData.error || 'Failed to place the order');\r\n                }\r\n            } else if (response.ok) {\r\n                const data = await response.json();\r\n                alert(`Order placed successfully: ${data.message}`);\r\n            } else {\r\n                const errorData = await response.json();\r\n                setError(errorData.error || 'Failed to place the order');\r\n            }\r\n        } catch (err) {\r\n            setError('An error occurred while processing the order');\r\n        }\r\n\r\n        setProcessing(false);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"amount\">Amount</label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"amount\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\" disabled={processing}>\r\n                {processing ? 'Processing...' : 'Place Order'}\r\n            </button>\r\n            {error && <div style={{ color: 'red' }}>{error}</div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    marginBottom: '20px',\r\n  },\r\n  label: {\r\n    marginBottom: '10px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    marginBottom: '20px',\r\n    padding: '10px',\r\n    fontSize: '16px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ddd',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#ccc',\r\n    cursor: 'not-allowed',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: '14px',\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}