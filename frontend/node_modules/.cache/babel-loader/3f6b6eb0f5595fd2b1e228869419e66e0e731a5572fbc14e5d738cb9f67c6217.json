{"ast":null,"code":"var _jsxFileName = \"C:\\\\msms\\\\msms\\\\frontend\\\\src\\\\postlogin\\\\User\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport AddressForm from './Address'; // Import the AddressForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your_stripe_publishable_key');\nconst PaymentForm = () => {\n  _s();\n  var _location$state;\n  const [clientSecret, setClientSecret] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [paymentType, setPaymentType] = useState('card');\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const stripe = useStripe();\n  const elements = useElements();\n  const location = useLocation();\n  const totalPrice = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.totalPrice) || 0;\n  useEffect(() => {\n    setAmount(totalPrice * 100);\n  }, [totalPrice]);\n  const handleAddressSubmit = () => {\n    // Refresh addresses after submitting a new address\n    fetchAddresses();\n  };\n  const fetchAddresses = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/medical_store_app/get-addresses/');\n      const data = await response.json();\n      setSelectedAddress(data[0] || null); // Use first address for example\n    } catch (error) {\n      setError('Failed to load addresses');\n    }\n  };\n  useEffect(() => {\n    fetchAddresses();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Handle payment submission here, as shown in your original PaymentForm\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Select Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAddress ? selectedAddress.id : '',\n        onChange: e => setSelectedAddress(e.target.value),\n        style: styles.input,\n        children: selectedAddress && /*#__PURE__*/_jsxDEV(\"option\", {\n          value: selectedAddress.id,\n          children: [selectedAddress.street_address, \", \", selectedAddress.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddressForm, {\n      onAddressSubmit: handleAddressSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"GrYcrpx2rMZWKIWIeFuc/M4TRAM=\", false, function () {\n  return [useStripe, useElements, useLocation];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","loadStripe","Elements","CardElement","useStripe","useElements","AddressForm","jsxDEV","_jsxDEV","stripePromise","PaymentForm","_s","_location$state","clientSecret","setClientSecret","amount","setAmount","error","setError","processing","setProcessing","paymentType","setPaymentType","selectedAddress","setSelectedAddress","stripe","elements","location","totalPrice","state","handleAddressSubmit","fetchAddresses","response","fetch","data","json","handleSubmit","event","preventDefault","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","id","onChange","e","target","input","street_address","city","type","button","onAddressSubmit","_c","$RefreshReg$"],"sources":["C:/msms/msms/frontend/src/postlogin/User/PaymentForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport AddressForm from './Address';  // Import the AddressForm\r\n\r\nconst stripePromise = loadStripe('your_stripe_publishable_key');\r\n\r\nconst PaymentForm = () => {\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [paymentType, setPaymentType] = useState('card');\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const location = useLocation();\r\n  const totalPrice = location.state?.totalPrice || 0;\r\n\r\n  useEffect(() => {\r\n    setAmount(totalPrice * 100);\r\n  }, [totalPrice]);\r\n\r\n  const handleAddressSubmit = () => {\r\n    // Refresh addresses after submitting a new address\r\n    fetchAddresses();\r\n  };\r\n\r\n  const fetchAddresses = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/medical_store_app/get-addresses/');\r\n      const data = await response.json();\r\n      setSelectedAddress(data[0] || null);  // Use first address for example\r\n    } catch (error) {\r\n      setError('Failed to load addresses');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAddresses();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // Handle payment submission here, as shown in your original PaymentForm\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Payment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Address selection dropdown */}\r\n        <label style={styles.label}>Select Address:</label>\r\n        <select\r\n          value={selectedAddress ? selectedAddress.id : ''}\r\n          onChange={(e) => setSelectedAddress(e.target.value)}\r\n          style={styles.input}\r\n        >\r\n          {selectedAddress && (\r\n            <option value={selectedAddress.id}>\r\n              {selectedAddress.street_address}, {selectedAddress.city}\r\n            </option>\r\n          )}\r\n        </select>\r\n\r\n        {/* Other payment details here */}\r\n\r\n        <button type=\"submit\" style={styles.button}>\r\n          Submit Payment\r\n        </button>\r\n      </form>\r\n\r\n      {/* Address form */}\r\n      <AddressForm onAddressSubmit={handleAddressSubmit} />\r\n      {error && <div style={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}